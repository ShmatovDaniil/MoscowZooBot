import telebot
from config import TOKEN
from error_handler import handle_error, logging


bot = telebot.TeleBot(TOKEN)

questions = [
    ("–ö–∞–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤—ã —Ü–µ–Ω–∏—Ç–µ –≤ —Å–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?", ["A. –°–∏–ª–∞", "B. –ú—É–¥—Ä–æ—Å—Ç—å", "C. –î–æ–±—Ä–æ—Ç–∞", "D. –°–º–µ–ª–æ—Å—Ç—å"]),
    ("–ö–∞–∫ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?", ["A. –ó–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º –∏–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∏–≥—Ä–∞–º–∏", "B. –ß–∏—Ç–∞—è –∫–Ω–∏–≥–∏ –∏–ª–∏ –∏–∑—É—á–∞—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ", "C. –ü–æ–º–æ–≥–∞—è –¥—Ä—É–≥–∏–º –∏–ª–∏ –ø—Ä–æ–≤–æ–¥—è –≤—Ä–µ–º—è —Å –±–ª–∏–∑–∫–∏–º–∏", "D. –ü—É—Ç–µ—à–µ—Å—Ç–≤—É—è –∏ –∏—Å—Å–ª–µ–¥—É—è –Ω–æ–≤—ã–µ –º–µ—Å—Ç–∞"]),
    ("–ö–∞–∫ –≤—ã —Ä–µ–∞–≥–∏—Ä—É–µ—Ç–µ –Ω–∞ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏?", ["A. –°–æ—Ö—Ä–∞–Ω—è—é —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ –¥–µ–π—Å—Ç–≤—É—é —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ", "B. –û–±–¥—É–º—ã–≤–∞—é –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã", "C. –ò—â—É –ø–æ–¥–¥–µ—Ä–∂–∫—É —É –¥—Ä—É–∑–µ–π –∏ —Å–µ–º—å–∏", "D. –î–µ–π—Å—Ç–≤—É—é –∏–Ω—Å—Ç–∏–Ω–∫—Ç–∏–≤–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ"]),
    ("–ö–∞–∫–æ–µ –∏–∑ —ç—Ç–∏—Ö –º–µ—Å—Ç –≤–∞–º –±–ª–∏–∂–µ –≤—Å–µ–≥–æ?", ["A. –ì–æ—Ä—ã –∏–ª–∏ –ª–µ—Å–∞", "B. –û–∑–µ—Ä–∞ –∏–ª–∏ —Ä–µ–∫–∏", "C. –ì–æ—Ä–æ–¥ –∏–ª–∏ –¥–µ—Ä–µ–≤–Ω—è", "D. –ü—É—Å—Ç—ã–Ω—è –∏–ª–∏ –ø–ª—è–∂"]),
    ("–ö–∞–∫ –≤—ã –æ–±—ã—á–Ω–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Ä–µ—à–µ–Ω–∏—è?", ["A. –ü–æ–ª–∞–≥–∞—é—Å—å –Ω–∞ –ª–æ–≥–∏–∫—É –∏ —Ñ–∞–∫—Ç—ã", "B. –°–ª—É—à–∞—é —Å–≤–æ—é –∏–Ω—Ç—É–∏—Ü–∏—é", "C. –û–±—Å—É–∂–¥–∞—é —Å –¥—Ä—É–≥–∏–º–∏", "D. –î–µ–π—Å—Ç–≤—É—é —Å–ø–æ–Ω—Ç–∞–Ω–Ω–æ"]),
    ("–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º?", ["A. –Ø –ª—é–±–ª—é –ø–µ—Ä–µ–º–µ–Ω—ã –∏ –Ω–æ–≤—ã–µ –≤—ã–∑–æ–≤—ã", "B. –Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å, –Ω–æ –≥–æ—Ç–æ–≤ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º", "C. –Ø –Ω–µ–º–Ω–æ–≥–æ –±–æ—é—Å—å –ø–µ—Ä–µ–º–µ–Ω, –Ω–æ —Å—Ç–∞—Ä–∞—é—Å—å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è", "D. –Ø –Ω–µ –±–æ—é—Å—å –ø–µ—Ä–µ–º–µ–Ω, –æ–Ω–∏ –º–µ–Ω—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç"]),
    ("–ö–∞–∫ –≤—ã —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å —Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º–∏?", ["A. –°—Ç–∞—Ä–∞—é—Å—å —Ä–µ—à–∏—Ç—å –∏—Ö –±—ã—Å—Ç—Ä–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ", "B. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –æ–±—Å—É–∂–¥–∞—Ç—å –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –∫–æ–º–ø—Ä–æ–º–∏—Å—Å", "C. –ò–∑–±–µ–≥–∞—é –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ", "D. –°—Ä–∞–∂–∞—é—Å—å –∑–∞ —Å–≤–æ–∏ —É–±–µ–∂–¥–µ–Ω–∏—è"]),
    ("–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º?", ["A. –Ø –ª—é–±–ª—é –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º–∏ –ª—é–¥—å–º–∏", "B. –Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –æ–±—â–∞—Ç—å—Å—è —Å –±–ª–∏–∑–∫–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏", "C. –Ø –Ω–µ–º–Ω–æ–≥–æ —Å—Ç–µ—Å–Ω—è—é—Å—å, –Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—é —Å–≤–æ–µ —Å–µ—Ä–¥—Ü–µ", "D. –Ø –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º"]),
    ("–ö–∞–∫–æ–µ –≤–∞—à–µ –ª—é–±–∏–º–æ–µ –≤—Ä–µ–º—è –≥–æ–¥–∞?", ["A. –õ–µ—Ç–æ ‚Äî –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π", "B. –û—Å–µ–Ω—å ‚Äî –≤—Ä–µ–º—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π", "C. –ó–∏–º–∞ ‚Äî –≤—Ä–µ–º—è —É—é—Ç–∞ –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è", "D. –í–µ—Å–Ω–∞ ‚Äî –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Ä–æ—Å—Ç–∞"]),
    ("–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ —Ä–∏—Å–∫—É?", ["A. –Ø –ª—é–±–ª—é —Ä–∏—Å–∫–æ–≤–∞—Ç—å –∏ –ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ", "B. –Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–π –ø–æ–¥—Ö–æ–¥", "C. –Ø –≤–∑–≤–µ—à–∏–≤–∞—é —Ä–∏—Å–∫–∏ –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º —Ä–µ—à–µ–Ω–∏—è", "D. –Ø –∏–Ω–æ–≥–¥–∞ —Ä–∏—Å–∫—É—é, –µ—Å–ª–∏ —ç—Ç–æ —Ç–æ–≥–æ —Å—Ç–æ–∏—Ç"]),
]

totem_animals = {
    "–¢–∏–≥—Ä": ("–¢—ã - –¢–∏–≥—Ä! –°–∏–º–≤–æ–ª —Å–∏–ª—ã –∏ —Ö—Ä–∞–±—Ä–æ—Å—Ç–∏.", "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/71062cdc-ae27-432a-84ed-d3743afd903b.jpeg"),
    "–°–æ–≤–∞": ("–¢—ã - –°–æ–≤–∞! –°–∏–º–≤–æ–ª –º—É–¥—Ä–æ—Å—Ç–∏ –∏ –∏–Ω—Ç—É–∏—Ü–∏–∏.", "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/e2f19554-2ab4-453e-b796-a2e975d8090d.jpg"),
    "–ú–µ–¥–≤–µ–¥—å": ("–¢—ã - –ú–µ–¥–≤–µ–¥—å! –°–∏–º–≤–æ–ª –¥—Ä—É–∂–±—ã –∏ –∏–≥—Ä–∏–≤–æ—Å—Ç–∏.", "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/b535fefc-6867-497b-a278-05966e32ff2d.jpg"),
    "–í–æ–ª–∫": ("–¢—ã - –í–æ–ª–∫! –°–∏–º–≤–æ–ª —Å–≤–æ–±–æ–¥—ã –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.", "https://storage.moscowzoo.ru/storage/647edc2a70bb5462366280fc/images/animals/a26086b0-53a3-452a-8552-5f5cef835879.jpg"),
}

user_data = {}


@bot.message_handler(commands=['start'])
def start(message):
    logging.info(f"User  @{message.from_user.username} initiated the quiz.")
    text = "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –≤–∞—à –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –±–æ—Ç, –∏ —Å–µ–≥–æ–¥–Ω—è –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º—Å—è –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫–æ–µ —É –≤–∞—Å —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ!üêæ\n\n" \
           "üéâ –í —Ö–æ–¥–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã —è –∑–∞–¥–∞–º –≤–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö –∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö. –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ —è –ø–æ–¥–±–µ—Ä—É –∂–∏–≤–æ—Ç–Ω–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏–¥–µ–∞–ª—å–Ω–æ –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç!\n\n" \
           "üêª –ù–æ —ç—Ç–æ –µ—â–µ –Ω–µ –≤—Å–µ! –í –∫–æ–Ω—Ü–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫ —Å—Ç–∞—Ç—å –æ–ø–µ–∫—É–Ω–æ–º —ç—Ç–æ–≥–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –≤ –Ω–∞—à–µ–º –∑–æ–æ–ø–∞—Ä–∫–µ.\n\n" \
           "–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å? –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '/go', –∏ –¥–∞–≤–∞–π—Ç–µ —É–∑–Ω–∞–µ–º, –∫—Ç–æ –≤–∞—à —Ç–æ—Ç–µ–º–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫!"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['go'])
def restart(message):
    user_data[message.chat.id] = {"A": 0, "B": 0, "C": 0, "D": 0, "question_index": 0}
    logging.info(f"User  @{message.from_user.username} restarted the quiz.")
    ask_question(message)

@bot.message_handler(commands=['send'])
def send_us(message):
    bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    bot.register_next_step_handler(message, ask_phone)

def ask_phone(message):
    user_name = message.text
    bot.reply_to(message, "–°–ø–∞—Å–∏–±–æ, {}! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:".format(user_name))
    bot.register_next_step_handler(message, ask_email, user_name)

def ask_email(message, user_name):
    user_phone = message.text
    bot.reply_to(message, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à email:")
    bot.register_next_step_handler(message, save_contact_info, user_name, user_phone)

def save_contact_info(message, user_name, user_phone):
    user_email = message.text
    user_id = message.from_user.id
    username = message.from_user.username

    try:
        with open('contacts.txt', 'a', encoding='utf-8') as f:
            f.write(f"–î–∞–Ω–Ω—ã–µ –æ—Ç @{username} (ID: {user_id}): –ò–º—è: {user_name}, –¢–µ–ª–µ—Ñ–æ–Ω: {user_phone}, Email: {user_email}\n")
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã. üòä\n\n–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–æ–∫ –∏ –ø–∏—Å—å–º–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤")
        logging.info(f"Contact info received from @{username}: {user_name}, {user_phone}, {user_email}")
    except Exception as e:
        handle_error(bot, message.chat.id, e)

@bot.message_handler(commands=['feedback'])
def collect_feedback(message):
    bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤:")
    bot.register_next_step_handler(message, save_feedback)

def save_feedback(message):
    feedback = message.text
    user_id = message.from_user.id
    username = message.from_user.username

    try:
        with open('feedback.txt', 'a', encoding='utf-8') as f:
            f.write(f"–û—Ç–∑—ã–≤ –æ—Ç @{username} (ID: {user_id}):\n{feedback}\n\n")
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ! üòä")
        logging.info(f"Feedback received from @{username}: {feedback}")
    except Exception as e:
        handle_error(bot, message.chat.id, e)

@bot.message_handler(commands=['contact'])
def contact(message):
    try:
        text = "üìû –í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫–∞–Ω–∞–ª–∞–º:\n\n" \
               "‚úâÔ∏è Email: zoofriends@moscowzoo.ru\n\n" \
               "üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (962) 971-38-75\n\n" \
               "üåê –í–µ–±-—Å–∞–π—Ç: https://moscowzoo.ru/animals/kinds\n\n" \
               "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –ø–∏—Å–∞—Ç—å –Ω–∞–º!"
        bot.reply_to(message, text)
        logging.info(f"Contact information sent to user @{message.from_user.username}.")
    except Exception as e:
        handle_error(bot, message.chat.id, e)

@bot.message_handler(commands=['info'])
def about_us(message):
    try:
        text = f"–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫ ‚Äî –æ–¥–∏–Ω –∏–∑ —Å—Ç–∞—Ä–µ–π—à–∏—Ö –∑–æ–æ–ø–∞—Ä–∫–æ–≤ –ï–≤—Ä–æ–ø—ã. –û–Ω –±—ã–ª –æ—Ç–∫—Ä—ã—Ç 31 —è–Ω–≤–∞—Ä—è 1864 –≥–æ–¥–∞ –ø–æ —Å—Ç–∞—Ä–æ–º—É —Å—Ç–∏–ª—é –∏ –Ω–∞–∑—ã–≤–∞–ª—Å—è —Ç–æ–≥–¥–∞ –∑–æ–æ—Å–∞–¥–æ–º.\n\n" \
               "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –∑–æ–æ–ø–∞—Ä–∫ –±—ã–ª –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω –ò–º–ø–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–º —Ä—É—Å—Å–∫–∏–º –æ–±—â–µ—Å—Ç–≤–æ–º –∞–∫–∫–ª–∏–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —Ä–∞—Å—Ç–µ–Ω–∏–π. –ù–∞—á–∞–ª–æ –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–≤—è–∑–∞–Ω–æ —Å –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä–æ–≤ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ö–∞—Ä–ª–∞ –§—Ä–∞–Ω—Ü–µ–≤–∏—á–∞ –†—É–ª—å–µ, –ê–Ω–∞—Ç–æ–ª–∏—è –ü–µ—Ç—Ä–æ–≤–∏—á–∞ –ë–æ–≥–¥–∞–Ω–æ–≤–∞ –∏ –°–µ—Ä–≥–µ—è –ê–ª–µ–∫—Å–µ–µ–≤–∏—á–∞ –£—Å–æ–≤–∞.\n\n" \
               "–ú–µ—Å—Ç–Ω–æ—Å—Ç—å, –≥–¥–µ —Ç–µ–ø–µ—Ä—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –°—Ç–∞—Ä–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –∑–æ–æ–ø–∞—Ä–∫–∞, –Ω–∞–∑—ã–≤–∞–ª–∞—Å—å ¬´–ü—Ä–µ—Å–Ω–µ–Ω—Å–∫–∏–µ –ø—Ä—É–¥—ã¬ª. –ó–¥–µ—Å—å –ø—Ä–æ—Ç–µ–∫–∞–ª–∞ –¥–æ–≤–æ–ª—å–Ω–æ —à–∏—Ä–æ–∫–∞—è —Ä–µ–∫–∞ –ü—Ä–µ—Å–Ω—è, –∏ –±—ã–ª–æ –æ–¥–Ω–æ –∏–∑ –ª—é–±–∏–º—ã—Ö –º–µ—Å—Ç –≥—É–ª—è–Ω–∏–π –º–æ—Å–∫–≤–∏—á–µ–π ‚Äî –∑–µ–ª—ë–Ω—ã–µ —Ö–æ–ª–º—ã, –∑–∞–ª–∏–≤–Ω—ã–µ –ª—É–≥–∞, —Ü–≤–µ—Ç—É—â–∏–µ —Å–∞–¥—ã —É–∫—Ä–∞—à–∞–ª–∏ –æ–∫—Ä–µ—Å—Ç–Ω–æ—Å—Ç–∏.\n\n" \
               "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–æ–æ—Å–∞–¥–∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ–º –≥–æ–ª–æ—Å–æ–≤ —á–ª–µ–Ω–æ–≤ –û–±—â–µ—Å—Ç–≤–∞ –∞–∫–∫–ª–∏–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±—ã–ª –≤—ã–±—Ä–∞–Ω –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç —É—á–∞—Å—Ç–æ–∫, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –Ω–∞—Ö–æ–¥–∏–ª—Å—è –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ –¥–ª—è –≤—Å–µ—Ö –º–æ—Å–∫–≤–∏—á–µ–π, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –Ω–µ–±–æ–≥–∞—Ç—ã—Ö. –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –ü–µ—Ç—Ä–æ–≤—Å–∫–æ–π –∞–∫–∞–¥–µ–º–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –±—ã–ª–∞ —É–¥–æ–±–Ω–µ–µ –∏ –±–æ–ª—å—à–µ, –Ω–æ –µ–∑–¥–∏—Ç—å —Ç—É–¥–∞ –±—ã–ª–æ –±—ã –¥–∞–ª–µ–∫–æ –∏ –¥–æ—Ä–æ–≥–æ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π.\n\n"
        bot.reply_to(message, text)
        logging.info(f"Information about the zoo sent to user @{message.from_user.username}.")
    except Exception as e:
        handle_error(bot, message.chat.id, e)

def ask_question(message):
    user_id = message.chat.id
    if user_id not in user_data:
        user_data[user_id] = {"A": 0, "B": 0, "C": 0, "D": 0, "question_index": 0}
        logging.info(f"User  @{user_id} started the quiz.")

    index = user_data[user_id]["question_index"]
    if index < len(questions):
        question, options = questions[index]
        markup = telebot.types.ReplyKeyboardMarkup(one_time_keyboard=True)
        for option in options:
            markup.add(option)
        bot.send_message(user_id, question, reply_markup=markup)
        logging.info(f"Question {index + 1} sent to user @{user_id}: {question}")
    else:
        show_result(message)

@bot.message_handler(func=lambda message: True)
def handle_answer(message):
    user_id = message.chat.id
    if user_id in user_data:
        question_index = user_data[user_id]["question_index"]
        if question_index < len(questions):
            answer = message.text.strip().upper()[0]
            if answer in ['A', 'B', 'C', 'D']:
                user_data[user_id][answer] += 1
                user_data[user_id]["question_index"] += 1  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
                logging.info(f"User  @{user_id} answered {answer} for question {question_index + 1}.")
                ask_question(message)
            else:
                logging.warning(f"User  {user_id} provided an invalid answer: {message.text}")
                bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ (A, B, C –∏–ª–∏ D).")
        else:
            logging.info(f"User  @{user_id} attempted to answer after quiz completion.")
            bot.send_message(user_id, "–í—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É!")

def show_result(message):
    user_id = message.chat.id
    scores = {
        "A": user_data[user_id]["A"],
        "B": user_data[user_id]["B"],
        "C": user_data[user_id]["C"],
        "D": user_data[user_id]["D"],
    }

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–æ–≤
    totem = max(scores, key=scores.get)
    logging.info(f"User @{user_id} has a totem animal: {totem}.")

    if totem == "A":
        message_text, image_url = totem_animals["–¢–∏–≥—Ä"]
    elif totem == "B":
        message_text, image_url = totem_animals["–°–æ–≤–∞"]
    elif totem == "C":
        message_text, image_url = totem_animals["–ú–µ–¥–≤–µ–¥—å"]
    else:
        message_text, image_url = totem_animals["–í–æ–ª–∫"]

    share_link = "—Ç—É—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è"
    bot.send_photo(user_id, image_url,
                   caption=f"{message_text}\n\n–•–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö? –í–æ—Ç —Å—Å—ã–ª–∫–∞: \n{share_link}")
    logging.info(f"Result sent to user @{user_id}: {message_text}.")

    text = f"–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ –Ω–∞–∂–º–∏—Ç–µ: /go\n\n"\
            "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –æ–ø–µ–∫—É–Ω—Å—Ç–≤–∞ –Ω–∞–∂–º–∏—Ç–µ: \n/info\n\n"\
            "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–µ–∫—É–Ω—Å—Ç–≤–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ: \n/send –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É\n\n"\
            "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –æ–ø–µ–∫–µ –∏ —Å—Ç–∞—Ç—å –æ–ø–µ–∫—É–Ω–æ–º –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏: /contact\n\n"\
            "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –±–æ—Ç–µ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–µ –æ–ø–µ–∫—É–Ω—Å—Ç–≤–∞ –Ω–∞–∂–º–∏—Ç–µ: \n/feedback\n"\

    bot.send_message(user_id, text, parse_mode="Markdown")

if __name__ == '__main__':
    logging.info("Bot is starting...")
    bot.polling(none_stop=True) 